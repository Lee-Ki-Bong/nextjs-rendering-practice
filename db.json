{
  "posts": [
    {
      "id": 1,
      "title": "CSR (Client-Side Rendering)",
      "body": "CSR(Client-Side Rendering)은 클라이언트, 즉 브라우저에서 데이터를 가져와 렌더링하는 방식입니다. 초기 HTML은 비어 있으며, 브라우저에서 JavaScript를 실행하여 데이터를 로드한 후 화면을 완성합니다. 이 방식은 사용자 상호작용이 많은 애플리케이션에 적합하지만, SEO(검색 엔진 최적화)에는 적합하지 않을 수 있습니다."
    },
    {
      "id": 2,
      "title": "SSR (Server-Side Rendering)",
      "body": "SSR(Server-Side Rendering)은 요청 시 서버에서 데이터를 가져와 HTML을 생성한 후 클라이언트에 전달하는 방식입니다. 최신 데이터를 즉시 제공하며 SEO(검색 엔진 최적화)에 적합하지만, 서버 부하가 증가할 수 있습니다. [참고] app 디렉토리에서는 getServerSideProps가 지원되지 않습니다."
    },
    {
      "id": 3,
      "title": "ISR (Incremental Static Regeneration)",
      "body": "ISR은 정적 사이트 생성(SSG)의 장점을 유지하면서, 설정된 revalidate 시간이 경과하면 서버에서 백그라운드 작업으로 페이지를 재생성합니다. 잘 되는지 테스트하려면 반드시 production 환경에서 확인해야 합니다."
    },
    {
      "id": 4,
      "title": "SSG (Static Site Generation)",
      "body": "SSG는 빌드 시 데이터를 가져와 정적 HTML을 생성하는 방식입니다. 성능과 SEO에 매우 유리합니다. 데이터가 빌드 이후에는 고정되며, 갱신하려면 다시 빌드해야 합니다."
    },
    {
      "id": 5,
      "title": "PPR (Partial Prerendering)",
      "body": "PPR은 정적 사이트 생성(SSG)의 장점을 유지하면서, 일부는 정적으로 미리 렌더링하고, 나머지 부분은 클라이언트에서 동적으로 렌더링입니다. 다이나믹 라우팅이나 데이터가 자주 갱신되는 페이지에 적합합니다."
    }
  ]
}
